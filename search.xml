<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>延时消息</title>
      <link href="/2021/08/16/yan-shi-xiao-xi/"/>
      <url>/2021/08/16/yan-shi-xiao-xi/</url>
      
        <content type="html"><![CDATA[<script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>流程漏斗分析</title>
      <link href="/2021/08/10/liu-cheng-lou-dou-fen-xi/"/>
      <url>/2021/08/10/liu-cheng-lou-dou-fen-xi/</url>
      
        <content type="html"><![CDATA[<h1 id="流程漏斗分析"><a href="#流程漏斗分析" class="headerlink" title="流程漏斗分析"></a>流程漏斗分析</h1><ol><li><p>人数漏斗<br>扫描人数:参与活动人数 tf_f_user_scan_record<br>抽奖人数:参与抽奖人数<br>中奖人数:参与中奖人数<br>领奖人数:参与领奖人数 </p></li><li><p>次数漏斗<br>扫描次数:参与活动次数 tf_f_user_scan_record<br>抽奖次数:参与抽奖次数<br>中奖次数:参与中奖次数<br>领奖次数:参与领奖次数 </p></li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>记一次使用fastjson拷贝对象的bug</title>
      <link href="/2021/08/09/dui-xiang-kao-bei/"/>
      <url>/2021/08/09/dui-xiang-kao-bei/</url>
      
        <content type="html"><![CDATA[<p>执行下面这行代码</p><pre class="line-numbers language-java"><code class="language-java">ModelVo modelVo <span class="token operator">=</span> JSONObject<span class="token punctuation">.</span><span class="token function">parseObject</span><span class="token punctuation">(</span>JSONObject<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span><span class="token punctuation">,</span> ModelVo<span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错<br><code>fastjson  java.lang.IllegalArgumentException: argument type mismatch</code></p><p><em>原因就是内部类的层次不够。以下面的例子举例</em></p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModelVo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> Data data<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Data</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Row<span class="token operator">></span> rows<span class="token punctuation">;</span>    <span class="token punctuation">}</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Row</span><span class="token punctuation">{</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>应该改成这样</p><pre class="line-numbers language-java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ModelVo</span> <span class="token punctuation">{</span>    <span class="token keyword">public</span> Data data<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Data</span> <span class="token punctuation">{</span>        <span class="token keyword">public</span> List<span class="token operator">&lt;</span>Row<span class="token operator">></span> rows<span class="token punctuation">;</span>         <span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Row</span><span class="token punctuation">{</span>        <span class="token punctuation">}</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>md语法</title>
      <link href="/2021/08/01/md-chang-yong-yu-fa/"/>
      <url>/2021/08/01/md-chang-yong-yu-fa/</url>
      
        <content type="html"><![CDATA[<h1 id="一级标题"><a href="#一级标题" class="headerlink" title="一级标题"></a>一级标题</h1><p>==周小凤是个大傻子==</p><h2 id="二级标题"><a href="#二级标题" class="headerlink" title="二级标题"></a>二级标题</h2><p><code>周小凤</code></p><h3 id="三级标题"><a href="#三级标题" class="headerlink" title="三级标题"></a>三级标题</h3><p><strong><em>周小凤</em></strong></p><h4 id="四级标题"><a href="#四级标题" class="headerlink" title="四级标题"></a>四级标题</h4><p><em>周小凤</em></p><h5 id="五级标题"><a href="#五级标题" class="headerlink" title="五级标题"></a>五级标题</h5><p>周小凤</p><h6 id="六级标题"><a href="#六级标题" class="headerlink" title="六级标题"></a>六级标题</h6><ul><li>Item 1</li><li>Item 2<ul><li>Item 2a</li><li>Item 2b</li></ul></li></ul><p>正如 Kanye West 所说：</p><blockquote><p>We’re living the future so<br>the present is our past.</p></blockquote><h2 id="如下，三个或者更多的"><a href="#如下，三个或者更多的" class="headerlink" title="如下，三个或者更多的"></a>如下，三个或者更多的</h2><h2 id="连字符"><a href="#连字符" class="headerlink" title="连字符"></a>连字符</h2><h2 id="星号"><a href="#星号" class="headerlink" title="星号"></a>星号</h2><p>我觉得你应该在这里使用<br><code>&lt;addr&gt;</code> 才对。</p><pre class="line-numbers language-ruby"><code class="language-ruby"><span class="token keyword">require</span> <span class="token string">'redcarpet'</span>markdown <span class="token operator">=</span> <span class="token constant">Redcarpet</span><span class="token punctuation">.</span><span class="token keyword">new</span><span class="token punctuation">(</span><span class="token string">"Hello World!"</span><span class="token punctuation">)</span>puts markdown<span class="token punctuation">.</span>to_html<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">add</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span> <span class="token punctuation">{</span>  <span class="token keyword">return</span> x <span class="token operator">+</span> y<span class="token punctuation">}</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">a<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-javascript"><code class="language-javascript">dsa<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><input checked="" disabled="" type="checkbox"> @mentions, #refs, <a href="">links</a>, <strong>formatting</strong>, and <del>tags</del> supported</li><li><input checked="" disabled="" type="checkbox"> list syntax required (any unordered or ordered list supported)</li><li><input checked="" disabled="" type="checkbox"> this is a complete item</li><li><input disabled="" type="checkbox"> this is an incomplete item</li></ul><p>[^1]: Hi! This is a footnote</p><ul><li>我爱周小凤<ul><li>我</li><li>爱</li><li>周</li><li>小</li><li>凤</li></ul></li></ul><ol><li>我 </li><li>爱 </li><li>周</li><li>小</li><li>凤 </li></ol><blockquote><p>我爱周小凤</p></blockquote><p><em>我爱周小凤</em></p><p><del>我爱周小凤</del><br><a href="https://www.jianshu.com/p/d1d6f6da103c" target="_blank" rel="noopener">百度链接</a>在哪里啊<br><img src="https://img1.baidu.com/it/u=197100022,1745471859&amp;fm=26&amp;fmt=auto&amp;gp=0.jpg" alt="图片地址"></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> md语法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> md </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据汇总按日分组统计</title>
      <link href="/2019/10/10/an-ri-fen-zu-de-ce-lue/"/>
      <url>/2019/10/10/an-ri-fen-zu-de-ce-lue/</url>
      
        <content type="html"><![CDATA[<h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>有个需求需要按日期分组（group by）统计，没有数据补0<br>之前做过类似的需求,那时候因为数据量比较大,业务也想对复杂,是通过定时任务统计前一天的数据到汇总表.然后查询的时候直接从汇总表去查就很easy了<br>这次因为业务比较简单,不想增加代码量,还需要建表,去写个定时任务,使简单的问题复杂化.我需要一张日期表，但我又不想建表。可以union all日期生成一张临时表然后左外连接你需要查询的数据表。</p><p>###实现思路<br>打个比方你想查一个最近7天的数据</p><pre class="line-numbers language-sql"><code class="language-sql"><span class="token keyword">select</span> <span class="token number">a</span><span class="token punctuation">.</span>click_date<span class="token punctuation">,</span> ifnull<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>count1<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">as</span> count1<span class="token keyword">from</span> <span class="token punctuation">(</span>         <span class="token keyword">SELECT</span> curdate<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> click_date         <span class="token keyword">union</span> <span class="token keyword">all</span>         <span class="token keyword">SELECT</span> date_sub<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">1</span> day<span class="token punctuation">)</span> <span class="token keyword">as</span> click_date         <span class="token keyword">union</span> <span class="token keyword">all</span>         <span class="token keyword">SELECT</span> date_sub<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">2</span> day<span class="token punctuation">)</span> <span class="token keyword">as</span> click_date         <span class="token keyword">union</span> <span class="token keyword">all</span>         <span class="token keyword">SELECT</span> date_sub<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">3</span> day<span class="token punctuation">)</span> <span class="token keyword">as</span> click_date         <span class="token keyword">union</span> <span class="token keyword">all</span>         <span class="token keyword">SELECT</span> date_sub<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">4</span> day<span class="token punctuation">)</span> <span class="token keyword">as</span> click_date         <span class="token keyword">union</span> <span class="token keyword">all</span>         <span class="token keyword">SELECT</span> date_sub<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">5</span> day<span class="token punctuation">)</span> <span class="token keyword">as</span> click_date         <span class="token keyword">union</span> <span class="token keyword">all</span>         <span class="token keyword">SELECT</span> date_sub<span class="token punctuation">(</span>curdate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> interval <span class="token number">6</span> day<span class="token punctuation">)</span> <span class="token keyword">as</span> click_date<span class="token punctuation">)</span> <span class="token number">a</span>         <span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token punctuation">(</span><span class="token keyword">select</span> <span class="token keyword">date</span><span class="token punctuation">(</span>alarmtime<span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token keyword">datetime</span><span class="token punctuation">,</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">as</span> count1                    <span class="token keyword">from</span> error                    <span class="token keyword">where</span> <span class="token keyword">type</span> <span class="token operator">=</span> <span class="token number">1</span>                    <span class="token keyword">group</span> <span class="token keyword">by</span> <span class="token keyword">date</span><span class="token punctuation">(</span>alarmtime<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token number">b</span> <span class="token keyword">on</span> <span class="token number">a</span><span class="token punctuation">.</span>click_date <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span><span class="token keyword">datetime</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>但是如果查询条件复杂一些，比如说我想知道<strong>开始时间-结束时间</strong>的数据，这就不像7天，30天这样可以直接写在sql里了，而且如果我想知道一年，你也不可能一直在后面追加一年的日期<br>不过思路是对的，只不过这张日期表我们可以通过代码去拼接sql，通过mybatis的$字符串拼接,这样不管再长的间隔也不需要我们手动拼接了。</p><h3 id="代码展示"><a href="#代码展示" class="headerlink" title="代码展示"></a>代码展示</h3><pre class="line-numbers language-java"><code class="language-java"><span class="token comment" spellcheck="true">//拿到指定开始时间-结束时间所有的日期</span>List<span class="token operator">&lt;</span>String<span class="token operator">></span> dateBetweenDays <span class="token operator">=</span> DateUtil<span class="token punctuation">.</span><span class="token function">getDateBetweenDays</span><span class="token punctuation">(</span>startDate<span class="token punctuation">,</span>endDate<span class="token punctuation">;</span><span class="token comment" spellcheck="true">//遍历日期拼接到sql里</span>StringBuilder sb <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">StringBuilder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> dateBetweenDays<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">!=</span> dateBetweenDays<span class="token punctuation">.</span><span class="token function">size</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"SELECT '%s' as timeDay union all "</span><span class="token punctuation">,</span> dateBetweenDays<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>        sb<span class="token punctuation">.</span><span class="token function">append</span><span class="token punctuation">(</span>String<span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"SELECT '%s' as timeDay"</span><span class="token punctuation">,</span> dateBetweenDays<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">}</span><span class="token punctuation">}</span>HashMap<span class="token operator">&lt;</span>String<span class="token punctuation">,</span> String<span class="token operator">></span> map <span class="token operator">=</span> Maps<span class="token punctuation">.</span><span class="token function">newHashMap</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"activityId"</span><span class="token punctuation">,</span> activityStaticReq<span class="token punctuation">.</span><span class="token function">getActivityId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"table"</span><span class="token punctuation">,</span> sb<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>List<span class="token operator">&lt;</span>Map<span class="token operator">></span> shareResult <span class="token operator">=</span> tfAccShareRecordMapper<span class="token punctuation">.</span><span class="token function">querShare</span><span class="token punctuation">(</span>map<span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-sql"><code class="language-sql"><span class="token comment" spellcheck="true">//最后在xml里拼接sql</span><span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token number">a</span><span class="token punctuation">.</span>timeDay<span class="token punctuation">,</span><span class="token string">'%Y/%m/%d'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> time<span class="token punctuation">,</span>ifnull<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>shareNum<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> shareNum<span class="token punctuation">,</span>ifnull<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>shareCount<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> shareCount<span class="token punctuation">,</span>ifnull<span class="token punctuation">(</span><span class="token number">b</span><span class="token punctuation">.</span>newUserNum<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span> newUserNum    <span class="token keyword">from</span> <span class="token punctuation">(</span>${<span class="token keyword">table</span>}<span class="token punctuation">)</span> <span class="token number">a</span> <span class="token keyword">left</span> <span class="token keyword">join</span> <span class="token punctuation">(</span>    <span class="token keyword">select</span> DATE_FORMAT<span class="token punctuation">(</span>create_time<span class="token punctuation">,</span> <span class="token string">'%Y/%m/%d'</span><span class="token punctuation">)</span> dayTime<span class="token punctuation">,</span>                    <span class="token function">count</span><span class="token punctuation">(</span>account_id<span class="token punctuation">)</span>                    shareNum<span class="token punctuation">,</span>                    <span class="token function">sum</span><span class="token punctuation">(</span>share_record_count<span class="token punctuation">)</span>         shareCount<span class="token punctuation">,</span>                    <span class="token function">sum</span><span class="token punctuation">(</span>is_new_user<span class="token punctuation">)</span>                     newUserNum                    <span class="token keyword">from</span> tf_acc_share_record o                    <span class="token keyword">where</span> o<span class="token punctuation">.</span>activity_id <span class="token operator">=</span> <span class="token comment" spellcheck="true">#{activityId}</span>                    <span class="token keyword">group</span> <span class="token keyword">by</span> DATE_FORMAT<span class="token punctuation">(</span>o<span class="token punctuation">.</span>create_time<span class="token punctuation">,</span> <span class="token string">'%Y/%m/%d'</span><span class="token punctuation">)</span>    <span class="token punctuation">)</span> <span class="token number">b</span> <span class="token keyword">on</span> DATE_FORMAT<span class="token punctuation">(</span><span class="token number">a</span><span class="token punctuation">.</span>timeDay<span class="token punctuation">,</span> <span class="token string">'%Y/%m/%d'</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">b</span><span class="token punctuation">.</span>dayTime <span class="token keyword">order</span> <span class="token keyword">by</span> <span class="token number">a</span><span class="token punctuation">.</span>timeDay            <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>没有一劳永逸的方案,持续尝试,才能写出更好的代码</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> 总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>方法的参数传递机制</title>
      <link href="/2019/10/03/fang-fa-de-can-shu-chuan-di-ji-zhi/"/>
      <url>/2019/10/03/fang-fa-de-can-shu-chuan-di-ji-zhi/</url>
      
        <content type="html"><![CDATA[<p>今天有个同事问了我一个基础问题,虽然比较基础,但平常写业务代码,有时候不注意往往会忽略这些小细节.<br> <img src="/images/%E5%8F%82%E6%95%B0%E4%BC%A0%E9%80%92q.png" alt="他问我b为什么显示没用到,原理是啥"><br> 回答这个问题之前我们需要明白形参和实参在传递不同数据类型时的区别</p><ul><li><p>形参和实参</p><ul><li><p>形参是基本数据类型，传递数据值</p></li><li><p>形参是引用数据类型，传递地址值，String、包装类等对象不可变<br>下面是我写的测试demo,大家就能看出区别了</p><pre class="line-numbers language-java"><code class="language-java"><span class="token annotation punctuation">@Test</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testParamTransfer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>  User a <span class="token operator">=</span> User<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token number">11</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  User b <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  User c <span class="token operator">=</span> User<span class="token punctuation">.</span><span class="token function">builder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">age</span><span class="token punctuation">(</span><span class="token number">17</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">int</span> d <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  String s <span class="token operator">=</span> <span class="token string">"123"</span><span class="token punctuation">;</span>  <span class="token function">change</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>a<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>c<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>  System<span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">change</span><span class="token punctuation">(</span>User a<span class="token punctuation">,</span> User b<span class="token punctuation">,</span> User c<span class="token punctuation">,</span><span class="token keyword">int</span> d<span class="token punctuation">,</span> String s<span class="token punctuation">)</span> <span class="token punctuation">{</span>  b <span class="token operator">=</span> a<span class="token punctuation">;</span>  b<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  c<span class="token punctuation">.</span><span class="token function">setAge</span><span class="token punctuation">(</span><span class="token number">18</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  d <span class="token operator">=</span> <span class="token number">10</span><span class="token punctuation">;</span>  s <span class="token operator">=</span> <span class="token string">"str"</span><span class="token punctuation">;</span><span class="token punctuation">}</span>输出<span class="token operator">:</span><span class="token comment" spellcheck="true">//a->User(phone=null, name=null, age=12)</span><span class="token comment" spellcheck="true">//b->User(phone=null, name=null, age=null)</span><span class="token comment" spellcheck="true">//c->User(phone=null, name=null, age=18)</span><span class="token comment" spellcheck="true">//d->0</span><span class="token comment" spellcheck="true">//e->123</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
      
      
      <categories>
          
          <category> java </category>
          
          <category> bug </category>
          
      </categories>
      
      
        <tags>
            
            <tag> java base </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
